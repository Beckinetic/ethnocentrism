library(Grind)
model <- function(t, state, parms){
with(as.list(c(state, parms)), {
AB <- 1 - A - B
dA <- -B * A + AB * AB + A * AB
dB <- -A * B + AB * AB + B * AB
#dAB <- 2 * A * B - AB * AB - (A + B) * AB
return(list(c(dA, dB)))
})
}
s <- c(A = 0.4, B = 0.4)
p <- c()
run(ymin = 0, ymax = 1)
plane(xmin = 0, xmax = 1, ymin = 0, ymax = 1, portrait = TRUE)
# low <- newton(c(A=0, B=1), plot=TRUE)
# mid <- newton(c(A=0.3660254, B=0.3660254), plot=TRUE)
# hig <- newton(c(A=1, B=0), plot=TRUE)
library(Grind)
model <- function(t, state, parms){
with(as.list(c(state, parms)), {
AB <- 1 - A - B
dA <- -B * A + AB * AB + A * AB
dB <- -A * B + AB * AB + B * AB
#dAB <- 2 * A * B - AB * AB - (A + B) * AB
return(list(c(dA, dB)))
})
}
s <- c(A = 0.2, B = 0.2)
p <- c()
run(ymin = 0, ymax = 1)
plane(xmin = 0, xmax = 1, ymin = 0, ymax = 1, portrait = TRUE)
# low <- newton(c(A=0, B=1), plot=TRUE)
# mid <- newton(c(A=0.3660254, B=0.3660254), plot=TRUE)
# hig <- newton(c(A=1, B=0), plot=TRUE)
library(Grind)
model <- function(t, state, parms){
with(as.list(c(state, parms)), {
AB <- 1 - A - B
dA <- -B * A + AB * AB + A * AB
dB <- -A * B + AB * AB + B * AB
#dAB <- 2 * A * B - AB * AB - (A + B) * AB
return(list(c(dA, dB)))
})
}
s <- c(A = 0.2, B = 0.2)
p <- c()
run(ymin = 0, ymax = 1)
plane(xmin = 0, xmax = 1, ymin = 0, ymax = 1, portrait = TRUE)
low <- newton(c(A=0, B=1), plot=TRUE)
mid <- newton(c(A=0.3660254, B=0.3660254), plot=TRUE)
hig <- newton(c(A=1, B=0), plot=TRUE)
library(Grind)
model <- function(t, state, parms){
with(as.list(c(state, parms)), {
AB <- 1 - A - B
dA <- -B * A + AB * AB + A * AB
dB <- -A * B + AB * AB + B * AB
#dAB <- 2 * A * B - AB * AB - (A + B) * AB
return(list(c(dA, dB)))
})
}
s <- c(A = 0.2, B = 0.2)
p <- c()
run(ymin = 0, ymax = 1)
plane(xmin = 0, xmax = 1, ymin = 0, ymax = 1, portrait = TRUE)
low <- newton(c(A=0, B=1), plot=TRUE)
mid <- newton(c(A=0.381966, B=0.381966), plot=TRUE)
hig <- newton(c(A=1, B=0), plot=TRUE)
model <- function(t, state, parms) {
with(as.list(c(state, parms)), {
dA <- -1 * B * A + 0.5*AB*AB + A*AB
dB <- -1 * A * B + 0.5*AB*AB + B*AB
dAB <- 2 * A * B - AB*AB - (A + B)*AB
return(list(c(dA, dB, dAB)))
})
}
p = c()
A = 0.3
B = 0.5
AB = 0.2
s = c(A,B,AB)
run(ymin = 0, ymax = 1)
model <- function(t, state, parms) {
with(as.list(c(state, parms)), {
dA <- -1 * B * A + 0.5*AB*AB + A*AB
dB <- -1 * A * B + 0.5*AB*AB + B*AB
dAB <- 2 * A * B - AB*AB - (A + B)*AB
return(list(c(dA, dB, dAB)))
})
}
p = c()
s = c(A = 0.2,B = 0.3,AB = 0.5)
run(ymin = 0, ymax = 1)
install.packages('RNetLogo')
setwd("~/Library/CloudStorage/OneDrive-Personal/ResMasPsych/1-CourseFiles/Complexity Science/Group Project/ethnocentrism/analysis")
data_raw <- read.csv('../data/ethnocentrism-proj experiment-no-perturbation-table.csv',skip=6)
View(data_raw)
data_raw <- read.csv('../data/ethnocentrism-proj experiment-no-perturbation-table.csv',skip=6)
head(data_raw)
library(dplyr)
average_data <- data_raw %>%
group_by(gamma, W, minority_proportion) %>%
summarise(across(altruists:egoists, mean, .names = "avg_{col}"))
library(dplyr)
average_data <- data_raw %>%
group_by(gamma, W, minority-proportion) %>%
summarise(across(altruists:egoists, mean, .names = "avg_{col}"))
library(dplyr)
average_data <- data_raw %>%
group_by(gamma, W, minority.proportion) %>%
summarise(across(altruists:egoists, mean, .names = "avg_{col}"))
View(data_raw)
data_raw <- read.csv('../data/ethnocentrism-proj experiment-no-perturbation-table.csv',skip=6)
head(data_raw)
data_raw <- read.csv('../data/ethnocentrism-proj experiment-no-perturbation-table.csv',skip=6)
# Rename columns for simplicity
colnames(data_raw) <- colnames(data_raw) %>%
gsub("count\\.turtles\\.with\\.\\.type\\.agent\\.\\.\\.\\.|\\.\\.and\\.tag\\.\\.\\.", "", .) %>%
gsub("Altruist", "altruists", .) %>%
gsub("Ethnocentrist", "ethnocentrists", .) %>%
gsub("Cosmopolitan", "cosmopolitans", .) %>%
gsub("Egoist", "egoists", .) %>%
gsub("majority", "majority", .) %>%
gsub("minority", "minority", .) %>%
gsub("\\.", "", .)
# Check the new column names to confirm
colnames(data_raw)
data_raw <- read.csv('../data/ethnocentrism-proj experiment-no-perturbation-table.csv',skip=6)
# Rename columns for simplicity
colnames(data_raw) <- colnames(data_raw) %>%
gsub("count\\.turtles\\.with\\.\\.type\\.agent\\.\\.\\.\\.|\\.\\.and\\.tag\\.\\.\\.", "", .) %>%
gsub("Altruist", "altruist_", .) %>%
gsub("Ethnocentrist", "ethnocentrist_", .) %>%
gsub("Cosmopolitan", "cosmopolitan_", .) %>%
gsub("Egoist", "egoist_", .) %>%
gsub("majority", "majority", .) %>%
gsub("minority", "minority", .) %>%
gsub("\\.", "", .)
# Check the new column names to confirm
colnames(data_raw)
data_raw <- read.csv('../data/ethnocentrism-proj experiment-no-perturbation-table.csv',skip=6)
# rename columns for simplicity
colnames(data_raw) <- colnames(data_raw) %>%
gsub("count\\.turtles\\.with\\.\\.type\\.agent\\.\\.\\.\\.|\\.\\.and\\.tag\\.\\.\\.", "", .) %>%
gsub("Altruist", "altruist_", .) %>%
gsub("Ethnocentrist", "ethnocentrist_", .) %>%
gsub("Cosmopolitan", "cosmopolitan_", .) %>%
gsub("Egoist", "egoist_", .) %>%
gsub("Undefined", "undefined_", .) %>%
gsub("majority", "majority", .) %>%
gsub("minority", "minority", .) %>%
gsub("\\.", "", .)
colnames(data_raw)
data_raw <- read.csv('../data/ethnocentrism-proj experiment-no-perturbation-table.csv',skip=6)
# rename columns for simplicity
colnames(data_raw) <- colnames(data_raw) %>%
gsub("count\\.turtles\\.with\\.\\.type\\.agent\\.\\.\\.\\.|\\.\\.and\\.tag\\.\\.\\.", "", .) %>%
gsub("Altruist", "altruist_", .) %>%
gsub("Ethnocentrist", "ethnocentrist_", .) %>%
gsub("Cosmopolitan", "cosmopolitan_", .) %>%
gsub("Egoist", "egoist_", .) %>%
gsub("Undefined", "undefined_", .) %>%
gsub("majority", "majority", .) %>%
gsub("minority", "minority", .) %>%
gsub("\\.", "_", .)
colnames(data_raw)
data_raw <- read.csv('../data/ethnocentrism-proj experiment-no-perturbation-table.csv',skip=6)
# rename columns for simplicity
colnames(data_raw) <- colnames(data_raw) %>%
gsub("count\\.turtles\\.with\\.\\.type\\.agent\\.\\.\\.\\.|\\.\\.and\\.tag\\.\\.\\.", "", .) %>%
gsub("Altruist", "altruist", .) %>%
gsub("Ethnocentrist", "ethnocentrist", .) %>%
gsub("Cosmopolitan", "cosmopolitan", .) %>%
gsub("Egoist", "egoist", .) %>%
gsub("Undefined", "undefined", .) %>%
gsub("majority", "majority", .) %>%
gsub("minority", "minority", .) %>%
gsub("\\.", "_", .)
colnames(data_raw)
data_raw <- read.csv('../data/ethnocentrism-proj experiment-no-perturbation-table.csv',skip=6)
# rename columns for simplicity
colnames(data_raw) <- colnames(data_raw) %>%
gsub("count\\.turtles\\.with\\.\\.type\\.agent\\.\\.\\.\\.|\\.\\.and\\.tag\\.\\.\\.", "", .) %>%
gsub("Altruist", "altruist", .) %>%
gsub("Ethnocentrist", "ethnocentrist", .) %>%
gsub("Cosmopolitan", "cosmopolitan", .) %>%
gsub("Egoist", "egoist", .) %>%
gsub("Undefined", "undefined", .) %>%
gsub("majority", "majority", .) %>%
gsub("minority", "minority", .) %>%
gsub("\\.", "", .)
colnames(data_raw)
library(dplyr)
average_data <- data_raw %>%
group_by(gamma, W, minority.proportion) %>%
summarise(across(altruists:egoists, mean, .names = "avg_{col}"))
library(dplyr)
average_data <- data_raw %>%
group_by(gamma, W, minorityproportion) %>%
summarise(across(altruists:egoists, mean, .names = "avg_{col}"))
library(dplyr)
average_data <- data_raw %>%
group_by(gamma, W, minorityproportion) %>%
summarise(across(altruistsmajority:undefinedminority, mean, .names = "avg_{col}"))
library(dplyr)
average_data <- data_raw %>%
group_by(gamma, W, minorityproportion) %>%
summarise(across(altruistmajority:undefinedminority, mean, .names = "avg_{col}"))
head(average_data)
View(average_data)
library(dplyr)
average_data <- data_raw %>%
group_by(gamma, W, minorityproportion) %>%
summarise(avg_altruist_majority = mean(altruistmajority),
avg_ethnocentrist_majority = mean(ethnocentristmajority),
avg_cosmopolitan_majority = mean(cosmopolitanmajority),
avg_egoist_majority = mean(egoistmajority),
avg_altruist_minority = mean(altruistminority),
avg_ethnocentrist_minority = mean(ethnocentristminority),
avg_cosmopolitan_minority = mean(cosmopolitanminority),
avg_egoist_minority = mean(egoistminority),
avg_altruist_all = mean(altruistmajority + altruistminority),
avg_ethnocentrist_all = mean(ethnocentristmajority + ethnocentristminority),
avg_cosmopolitan_all = mean(cosmopolitanmajority + cosmopolitanminority),
avg_egoist_all = mean(egoistmajority + egoistminority))
head(average_data)
data_raw <- read.csv('../data/ethnocentrism-proj experiment-no-perturbation-table.csv',skip=6)
# rename columns for simplicity
colnames(data_raw) <- colnames(data_raw) %>%
gsub("count\\.turtles\\.with\\.\\.type\\.agent\\.\\.\\.\\.|\\.\\.and\\.tag\\.\\.\\.", "", .) %>%
gsub("Altruist", "altruist", .) %>%
gsub("Ethnocentrist", "ethnocentrist", .) %>%
gsub("Cosmopolitan", "cosmopolitan", .) %>%
gsub("Egoist", "egoist", .) %>%
gsub("Undefined", "undefined", .) %>%
gsub("majority", "majority", .) %>%
gsub("minority", "minority", .) %>%
gsub("\\.", "", .)
colnames(data_raw)
library(dplyr)
average_data <- data_raw %>%
group_by(gamma, W, minorityproportion) %>%
summarise(avg_altruist_majority = mean(altruistmajority),
avg_ethnocentrist_majority = mean(ethnocentristmajority),
avg_cosmopolitan_majority = mean(cosmopolitanmajority),
avg_egoist_majority = mean(egoistmajority),
avg_altruist_minority = mean(altruistminority),
avg_ethnocentrist_minority = mean(ethnocentristminority),
avg_cosmopolitan_minority = mean(cosmopolitanminority),
avg_egoist_minority = mean(egoistminority),
avg_altruist_all = mean(altruistmajority + altruistminority),
avg_ethnocentrist_all = mean(ethnocentristmajority + ethnocentristminority),
avg_cosmopolitan_all = mean(cosmopolitanmajority + cosmopolitanminority),
avg_egoist_all = mean(egoistmajority + egoistminority))
head(average_data)
View(average_data)
library(ggplot2)
# Function to plot each outcome by gamma, W, and minority proportion for majority, minority, and all
plot_outcomes <- function(data, outcome) {
ggplot(data, aes(x = gamma, y = get(paste0("avg_", outcome)), color = as.factor(W))) +
geom_line() +
facet_wrap(~ minorityproportion, scales = "free_y") +
labs(title = paste("Effect of Gamma and W on", outcome),
x = "Gamma", y = outcome, color = "W") +
theme_minimal()
}
# Plot for altruists, ethnocentrists, cosmopolitans, and egoists
plot_outcomes(average_data, "altruist_majority")
plot_outcomes(average_data, "altruist_minority")
plot_outcomes(average_data, "altruist_all")
plot_outcomes(average_data, "ethnocentrist_majority")
plot_outcomes(average_data, "ethnocentrist_minority")
plot_outcomes(average_data, "ethnocentrist_all")
plot_outcomes(average_data, "cosmopolitan_majority")
plot_outcomes(average_data, "cosmopolitan_minority")
plot_outcomes(average_data, "cosmopolitan_all")
plot_outcomes(average_data, "egoist_majority")
plot_outcomes(average_data, "egoist_minority")
plot_outcomes(average_data, "egoist_all")
# Prepare data for MANOVA using relevant columns
manova_data <- data_raw %>%
select(gamma, W, minorityproportion, altruistmajority, ethnocentristmajority, cosmopolitanmajority, egoistmajority,
altruistminority, ethnocentristminority, cosmopolitanminority, egoistminority)
# Run MANOVA
manova_results <- manova(cbind(altruistmajority, ethnocentristmajority, cosmopolitanmajority, egoistmajority,
altruistminority, ethnocentristminority, cosmopolitanminority, egoistminority) ~ gamma * W * minorityproportion,
data = manova_data)
# Summary of MANOVA results
summary(manova_results)
# Alternatively, individual linear regression models for each outcome
summary(lm(altruistmajority ~ gamma * W * minorityproportion, data = manova_data))
summary(lm(ethnocentristmajority ~ gamma * W * minorityproportion, data = manova_data))
summary(lm(cosmopolitanmajority ~ gamma * W * minorityproportion, data = manova_data))
summary(lm(egoistmajority ~ gamma * W * minorityproportion, data = manova_data))
data_raw <- read.csv('../data/ethnocentrism-proj experiment-no-perturbation-table.csv',skip=6)
# rename columns for simplicity
colnames(data_raw) <- colnames(data_raw) %>%
gsub("count\\.turtles\\.with\\.\\.type\\.agent\\.\\.\\.\\.|\\.\\.and\\.tag\\.\\.\\.", "", .) %>%
gsub("Altruist", "altruist", .) %>%
gsub("Ethnocentrist", "ethnocentrist", .) %>%
gsub("Cosmopolitan", "cosmopolitan", .) %>%
gsub("Egoist", "egoist", .) %>%
gsub("Undefined", "undefined", .) %>%
gsub("majority", "majority", .) %>%
gsub("minority", "minority", .) %>%
gsub("\\.", "", .)
colnames(data_raw)
library(dplyr)
average_data <- data_raw %>%
group_by(gamma, W, minorityproportion) %>%
summarise(avg_altruist_majority = mean(altruistmajority),
avg_ethnocentrist_majority = mean(ethnocentristmajority),
avg_cosmopolitan_majority = mean(cosmopolitanmajority),
avg_egoist_majority = mean(egoistmajority),
avg_altruist_minority = mean(altruistminority),
avg_ethnocentrist_minority = mean(ethnocentristminority),
avg_cosmopolitan_minority = mean(cosmopolitanminority),
avg_egoist_minority = mean(egoistminority),
avg_altruist_all = mean(altruistmajority + altruistminority),
avg_ethnocentrist_all = mean(ethnocentristmajority + ethnocentristminority),
avg_cosmopolitan_all = mean(cosmopolitanmajority + cosmopolitanminority),
avg_egoist_all = mean(egoistmajority + egoistminority))
head(average_data)
library(ggplot2)
# Function to plot each outcome by gamma, W, and minority proportion for majority, minority, and all
plot_outcomes <- function(data, outcome) {
ggplot(data, aes(x = gamma, y = get(paste0("avg_", outcome)), color = as.factor(W))) +
geom_line() +
facet_wrap(~ minorityproportion, scales = "free_y") +
labs(title = paste("Effect of Gamma and W on", outcome),
x = "Gamma", y = outcome, color = "W") +
theme_minimal()
}
# Plot for altruists, ethnocentrists, cosmopolitans, and egoists
plot_outcomes(average_data, "altruist_majority")
plot_outcomes(average_data, "altruist_minority")
plot_outcomes(average_data, "altruist_all")
plot_outcomes(average_data, "ethnocentrist_majority")
plot_outcomes(average_data, "ethnocentrist_minority")
plot_outcomes(average_data, "ethnocentrist_all")
plot_outcomes(average_data, "cosmopolitan_majority")
plot_outcomes(average_data, "cosmopolitan_minority")
plot_outcomes(average_data, "cosmopolitan_all")
plot_outcomes(average_data, "egoist_majority")
plot_outcomes(average_data, "egoist_minority")
plot_outcomes(average_data, "egoist_all")
# Prepare data for MANOVA using relevant columns
manova_data <- data_raw %>%
select(gamma, W, minorityproportion, altruistmajority, ethnocentristmajority, cosmopolitanmajority, egoistmajority,
altruistminority, ethnocentristminority, cosmopolitanminority, egoistminority)
# Run MANOVA
manova_results <- manova(cbind(altruistmajority, ethnocentristmajority, cosmopolitanmajority, egoistmajority,
altruistminority, ethnocentristminority, cosmopolitanminority, egoistminority) ~ gamma * W * minorityproportion,
data = manova_data)
# Summary of MANOVA results
summary(manova_results)
# Alternatively, individual linear regression models for each outcome
summary(lm(altruistmajority ~ gamma * W * minorityproportion, data = manova_data))
summary(lm(ethnocentristmajority ~ gamma * W * minorityproportion, data = manova_data))
summary(lm(cosmopolitanmajority ~ gamma * W * minorityproportion, data = manova_data))
summary(lm(egoistmajority ~ gamma * W * minorityproportion, data = manova_data))
# Prepare data for MANOVA using relevant columns
manova_data <- data_raw %>%
select(gamma, W, minorityproportion, altruistmajority, ethnocentristmajority, cosmopolitanmajority, egoistmajority,
altruistminority, ethnocentristminority, cosmopolitanminority, egoistminority)
# Run MANOVA
manova_results <- manova(cbind(altruistmajority, ethnocentristmajority, cosmopolitanmajority, egoistmajority,
altruistminority, ethnocentristminority, cosmopolitanminority, egoistminority) ~ gamma * W * minorityproportion,
data = manova_data)
# Summary of MANOVA results
summary(manova_results)
# Alternatively, individual linear regression models for each outcome
# summary(lm(altruistmajority ~ gamma * W * minorityproportion, data = manova_data))
# summary(lm(ethnocentristmajority ~ gamma * W * minorityproportion, data = manova_data))
# summary(lm(cosmopolitanmajority ~ gamma * W * minorityproportion, data = manova_data))
# summary(lm(egoistmajority ~ gamma * W * minorityproportion, data = manova_data))
# Prepare data for MANOVA using relevant columns
manova_data <- data_raw %>%
select(gamma, W, minorityproportion, altruistmajority, ethnocentristmajority, cosmopolitanmajority, egoistmajority,
altruistminority, ethnocentristminority, cosmopolitanminority, egoistminority)
# Run MANOVA
manova_results <- manova(cbind(altruistmajority, ethnocentristmajority, cosmopolitanmajority, egoistmajority,
altruistminority, ethnocentristminority, cosmopolitanminority, egoistminority) ~ gamma * minorityproportion,
data = manova_data)
# Summary of MANOVA results
summary(manova_results)
# Alternatively, individual linear regression models for each outcome
# summary(lm(altruistmajority ~ gamma * W * minorityproportion, data = manova_data))
# summary(lm(ethnocentristmajority ~ gamma * W * minorityproportion, data = manova_data))
# summary(lm(cosmopolitanmajority ~ gamma * W * minorityproportion, data = manova_data))
# summary(lm(egoistmajority ~ gamma * W * minorityproportion, data = manova_data))
# Prepare data for MANOVA using relevant columns
manova_data <- data_raw %>%
select(gamma, W, minorityproportion, altruistmajority, ethnocentristmajority, cosmopolitanmajority, egoistmajority,
altruistminority, ethnocentristminority, cosmopolitanminority, egoistminority)
# Run MANOVA
manova_results <- manova(cbind(altruistmajority, ethnocentristmajority, cosmopolitanmajority, egoistmajority,
altruistminority, ethnocentristminority, cosmopolitanminority, egoistminority) ~ gamma * W * minorityproportion,
data = manova_data)
# Summary of MANOVA results
summary(manova_results)
# Alternatively, individual linear regression models for each outcome
# summary(lm(altruistmajority ~ gamma * W * minorityproportion, data = manova_data))
# summary(lm(ethnocentristmajority ~ gamma * W * minorityproportion, data = manova_data))
# summary(lm(cosmopolitanmajority ~ gamma * W * minorityproportion, data = manova_data))
# summary(lm(egoistmajority ~ gamma * W * minorityproportion, data = manova_data))
library(ggplot2)
average_data_gamma <- data_raw %>%
group_by(gamma) %>%
summarise(across(altruistmajority:egoistminority, mean, .names = "avg_{col}"))
average_data_W <- data_raw %>%
group_by(W) %>%
summarise(across(altruistmajority:egoistminority, mean, .names = "avg_{col}"))
average_data_minorityprop <- data_raw %>%
group_by(minorityproportion) %>%
summarise(across(altruistmajority:egoistminority, mean, .names = "avg_{col}"))
# Define a function to create the plot for each x-axis parameter
plot_types <- function(data, x_var, title_suffix) {
# Majority group plot
ggplot(data, aes_string(x = x_var)) +
geom_line(aes(y = avg_altruistmajority, color = "Altruist")) +
geom_line(aes(y = avg_ethnocentristmajority, color = "Ethnocentrist")) +
geom_line(aes(y = avg_cosmopolitanmajority, color = "Cosmopolitan")) +
geom_line(aes(y = avg_egoistmajority, color = "Egoist")) +
labs(title = paste("Effect of", x_var, "on Agent Types - Majority", title_suffix),
x = x_var, y = "Number of Agents", color = "Agent Type") +
theme_minimal()
# Minority group plot
ggplot(data, aes_string(x = x_var)) +
geom_line(aes(y = avg_altruistminority, color = "Altruist")) +
geom_line(aes(y = avg_ethnocentristminority, color = "Ethnocentrist")) +
geom_line(aes(y = avg_cosmopolitanminority, color = "Cosmopolitan")) +
geom_line(aes(y = avg_egoistminority, color = "Egoist")) +
labs(title = paste("Effect of", x_var, "on Agent Types - Minority", title_suffix),
x = x_var, y = "Number of Agents", color = "Agent Type") +
theme_minimal()
# Combined group plot (all)
ggplot(data, aes_string(x = x_var)) +
geom_line(aes(y = avg_altruistmajority + avg_altruistminority, color = "Altruist")) +
geom_line(aes(y = avg_ethnocentristmajority + avg_ethnocentristminority, color = "Ethnocentrist")) +
geom_line(aes(y = avg_cosmopolitanmajority + avg_cosmopolitanminority, color = "Cosmopolitan")) +
geom_line(aes(y = avg_egoistmajority + avg_egoistminority, color = "Egoist")) +
labs(title = paste("Effect of", x_var, "on Agent Types - All", title_suffix),
x = x_var, y = "Number of Agents", color = "Agent Type") +
theme_minimal()
}
# Plot for gamma
plot_types(average_data_gamma, "gamma", "Averaged Over W and Minority Proportion")
# Plot for W
plot_types(average_data_W, "W", "Averaged Over Gamma and Minority Proportion")
# Plot for minority proportion
plot_types(average_data_minorityprop, "minorityproportion", "Averaged Over Gamma and W")
# Plot for gamma
plot_types(average_data_gamma, "gamma", "Averaged Over W and Minority Proportion")
library(ggplot2)
average_data_gamma <- data_raw %>%
group_by(gamma) %>%
summarise(across(altruistmajority:egoistminority, mean, .names = "avg_{col}"))
average_data_W <- data_raw %>%
group_by(W) %>%
summarise(across(altruistmajority:egoistminority, mean, .names = "avg_{col}"))
average_data_minorityprop <- data_raw %>%
group_by(minorityproportion) %>%
summarise(across(altruistmajority:egoistminority, mean, .names = "avg_{col}"))
# Define a function to create the plot for each x-axis parameter
plot_types_majority <- function(data, x_var, title_suffix) {
# Majority group plot
ggplot(data, aes_string(x = x_var)) +
geom_line(aes(y = avg_altruistmajority, color = "Altruist")) +
geom_line(aes(y = avg_ethnocentristmajority, color = "Ethnocentrist")) +
geom_line(aes(y = avg_cosmopolitanmajority, color = "Cosmopolitan")) +
geom_line(aes(y = avg_egoistmajority, color = "Egoist")) +
labs(title = paste("Effect of", x_var, "on Agent Types - Majority", title_suffix),
x = x_var, y = "Number of Agents", color = "Agent Type") +
theme_minimal()
}
plot_types_minority <- function(data, x_var, title_suffix) {
# Minority group plot
ggplot(data, aes_string(x = x_var)) +
geom_line(aes(y = avg_altruistminority, color = "Altruist")) +
geom_line(aes(y = avg_ethnocentristminority, color = "Ethnocentrist")) +
geom_line(aes(y = avg_cosmopolitanminority, color = "Cosmopolitan")) +
geom_line(aes(y = avg_egoistminority, color = "Egoist")) +
labs(title = paste("Effect of", x_var, "on Agent Types - Minority", title_suffix),
x = x_var, y = "Number of Agents", color = "Agent Type") +
theme_minimal()
}
plot_types_all <- function(data, x_var, title_suffix) {
# Combined group plot (all)
ggplot(data, aes_string(x = x_var)) +
geom_line(aes(y = avg_altruistmajority + avg_altruistminority, color = "Altruist")) +
geom_line(aes(y = avg_ethnocentristmajority + avg_ethnocentristminority, color = "Ethnocentrist")) +
geom_line(aes(y = avg_cosmopolitanmajority + avg_cosmopolitanminority, color = "Cosmopolitan")) +
geom_line(aes(y = avg_egoistmajority + avg_egoistminority, color = "Egoist")) +
labs(title = paste("Effect of", x_var, "on Agent Types - All", title_suffix),
x = x_var, y = "Number of Agents", color = "Agent Type") +
theme_minimal()
}
# Plot for gamma
plot_types_majority(average_data_gamma, "gamma", "Averaged Over W and Minority Proportion")
plot_types_minority(average_data_gamma, "gamma", "Averaged Over W and Minority Proportion")
plot_types_all(average_data_gamma, "gamma", "Averaged Over W and Minority Proportion")
# Plot for gamma
plot_types_majority(average_data_gamma, "W", "Averaged Over W and Minority Proportion")
# Plot for gamma
plot_types_majority(average_data_W, "W", "Averaged Over W and Minority Proportion")
plot_types_minority(average_data_W, "W", "Averaged Over W and Minority Proportion")
plot_types_all(average_data_W, "W", "Averaged Over W and Minority Proportion")
# Plot for minority proportion
plot_types_majority(average_data_minorityprop, "minorityproportion", "Averaged Over W and Minority Proportion")
plot_types_minority(average_data_minorityprop, "minorityproportion", "Averaged Over W and Minority Proportion")
plot_types_all(average_data_minorityprop, "minorityproportion", "Averaged Over W and Minority Proportion")
